target 'SoMuchCoffee' do
  use_frameworks!
  pod 'RealmSwift'
  pod 'FontAwesome.swift'
end

class Pod::Target::BuildSettings::AggregateTargetSettings
  alias_method :ld_runpath_search_paths_original, :ld_runpath_search_paths

  def ld_runpath_search_paths
      return ld_runpath_search_paths_original unless configuration_name == "Debug"
      return (ld_runpath_search_paths_original || []) + (framework_search_paths || [])
  end
end

class Pod::Target::BuildSettings::PodTargetSettings
  alias_method :ld_runpath_search_paths_original, :ld_runpath_search_paths

  def ld_runpath_search_paths
      return (ld_runpath_search_paths_original || []) + (framework_search_paths || [])
  end
end

# post_install do |installer|
#   installer.pods_project.targets.each do |target|
#     target.build_configurations.each do |config|
#       config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
#     end
#   end
# end

# Disable Code Coverage for Pods projects
# post_install do |installer_representation|
#   installer_representation.pods_project.targets.each do |target|
#       target.build_configurations.each do |config|
#           config.build_settings['CLANG_ENABLE_CODE_COVERAGE'] = 'NO'
#       end
#   end
# end

# class Pod::Target::BuildSettings::AggregateTargetSettings
#   alias_method :ld_runpath_search_paths_original, :ld_runpath_search_paths

#   def ld_runpath_search_paths
#       return ld_runpath_search_paths_original unless configuration_name == "Debug"
#       return ld_runpath_search_paths_original + framework_search_paths
#   end
# end

# class Pod::Target::BuildSettings::PodTargetSettings
#   alias_method :ld_runpath_search_paths_original, :ld_runpath_search_paths

#   def ld_runpath_search_paths
#       return (ld_runpath_search_paths_original || []) + framework_search_paths
#   end
# end

# class Pod::Target::BuildSettings::AggregateTargetSettings
#   BUILT_PRODUCTS_DIR_VARIABLE = "${BUILT_PRODUCTS_DIR}"

#   alias_method :ld_runpath_search_paths_original, :ld_runpath_search_paths

#   def ld_runpath_search_paths
#       ld_runpath_search_paths_original + custom_ld_paths + [BUILT_PRODUCTS_DIR_VARIABLE]
#   end

#   def custom_ld_paths
#       return [] unless configuration_name == "Debug"
#       target.pod_targets.map do |pod|
#           BUILT_PRODUCTS_DIR_VARIABLE + "/" + pod.product_basename
#       end
#   end
# end

# class Pod::Target::BuildSettings::PodTargetSettings
#   BUILT_PRODUCTS_DIR_VARIABLE = "${BUILT_PRODUCTS_DIR}"

#   alias_method :ld_runpath_search_paths_original, :ld_runpath_search_paths

#   def ld_runpath_search_paths
#       if ld_runpath_search_paths_original
#           ld_runpath_search_paths_original + custom_ld_paths + [BUILT_PRODUCTS_DIR_VARIABLE]
#       else
#           # May just want to not return in this case
#           custom_ld_paths + [BUILT_PRODUCTS_DIR_VARIABLE]
#       end
#   end

#   def custom_ld_paths
#       target.dependent_targets.map do |pod|
#           BUILT_PRODUCTS_DIR_VARIABLE + "/../" + pod.product_basename
#       end
#   end
# end